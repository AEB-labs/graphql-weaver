{
  "errors": [
    {
      "message": "Argument \"name\" has invalid value \"Marie-Louise\".\nExpected type \"Name\", found \"Marie-Louise\".",
      "locations": [
        {
          "line": 28,
          "column": 36
        }
      ],
      "path": [
        "userValidationError",
        "greta",
        "husband"
      ]
    },
    {
      "message": "GraphQL error at line 39, column 47:\nArgument \"name\" has invalid value \"Marie-Louise\".\nExpected type \"Name\", found \"Marie-Louise\".\n\nGraphQL error at line 40, column 47:\nArgument \"name\" has invalid value \"Marie-Louise\".\nExpected type \"Name\", found \"Marie-Louise\".",
      "path": [
        "userValidationErrors",
        "greta",
        "husband"
      ]
    },
    {
      "message": "Variable \"$name\" got invalid value \"Hans-Joachim\".\nExpected type \"Name\", found \"Hans-Joachim\": I don't like this name: Hans-Joachim",
      "path": [
        "systemValidationError",
        "lisa",
        "husband"
      ]
    },
    {
      "message": "No horst by name",
      "path": [
        "linkFieldError",
        "gretaLinkBroken",
        "husband"
      ]
    },
    {
      "message": "horst age not available",
      "locations": [
        {
          "line": 7,
          "column": 17
        }
      ],
      "path": [
        "ns2",
        "greta",
        "husband",
        "age"
      ]
    },
    {
      "message": "Errors retrieving key field \"name\":\n\nNo name for this horst\n\nNo name for this horst",
      "locations": [
        {
          "line": 59,
          "column": 13
        }
      ],
      "path": [
        "linkKeyError",
        "gretaKeyBroken",
        "husband"
      ]
    }
  ],
  "data": {
    "ns2": {
      "greta": {
        "name": "Greta",
        "husband": {
          "name": "Horst",
          "age": null
        }
      }
    },
    "systemValidationError": {
      "lisa": {
        "name": "Lisa",
        "husband": null
      }
    },
    "userValidationError": {
      "greta": {
        "name": "Greta",
        "husband": null
      }
    },
    "userValidationErrors": {
      "greta": {
        "name": "Greta",
        "husband": null
      }
    },
    "linkFieldError": {
      "gretaLinkBroken": {
        "name": "Greta",
        "husband": null
      }
    },
    "linkKeyError": {
      "gretaKeyBroken": {
        "name": "Greta",
        "husband": null
      }
    }
  }
}